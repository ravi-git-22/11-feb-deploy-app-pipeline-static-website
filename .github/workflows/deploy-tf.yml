name: Deploy Azure using Terraform #name of pipeline
on: [push] #turns on via git push

jobs: # job starts
  deploy-infrastructure: # name of the first git-hub action
    runs-on: ubuntu-latest #requesting github actions for ubuntu image

    env: # define login, subscription IDs etc and encrypting for secracy
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - uses: actions/checkout@v3 # checks out the code from latest pushed repository

      - name: Setup Terraform # setup terraform on Ubuntu
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan -out main.tfplan

      - name: Terraform Apply
        run: terraform apply "main.tfplan"

  build: # name of the second git-hub action
    needs: deploy-infrastructure #needs/depends on first job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            stor-acc-name=$(az storage account list -g static-website-rg --query "[].{name:name}" --output tsv)
            MSYS_NO_PATHCONV=1 az storage blob upload-batch --account-name $stor-acc-name --auth-mode key -d '$web' -s ./app

          